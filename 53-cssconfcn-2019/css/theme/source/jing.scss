/**
 * Custom theme for Reveal.js presentations.
 *
 * Copyright (C) 2018 Chen Hui Jing, https://www.chenhuijing.com/
 */

// Default mixins and settings -----------------
@import '../template/mixins';
@import '../template/settings';
// ---------------------------------------------

// Include theme-specific fonts
@import url('../../lib/font/magnetic-pro/magnetic-pro.css');
@import url('../../lib/font/magnetic-pro-black/magnetic-pro-black.css');

// Theme template ------------------------------
@import '../template/theme';

// ---------------------------------------------
// Customised styles for this presentation
html {
  box-sizing: border-box;
  height: 100%;
  font-size: 125%;
}

*,
*::before,
*::after {
  box-sizing: inherit;
}

.reveal {
  .l-multiple {
    display: flex;
    justify-content: space-around;

    .j-vert {
      width: 1em;
    }
  }

  .l-double {
    display: grid;
    grid-template-columns: 50% 50%;
  }

  .box {
    background-color: $selectionBackgroundColor;
    color: $selectionColor;
  }

  .j-icon {
    display: inline-block;
    vertical-align: middle;
    margin-right: 1rem;
  }

  .j-stamp {
    position: absolute;
    top: 0;
    left: 45%;
    transform: rotate(-30deg) translateX(-50%);
    transform-origin: 0 0;
    padding: 0.25em;
    border: 0.2em solid #a70000;
    color: #a70000;
    background-color: white;
    text-shadow: 1px 1px 2px black;
    box-shadow: 1px 1px 2px black;
    border-radius: 0.5em;
    font-size: 150%;
  }

  em {
    color: $headingColor;
  }

  pre {
    line-height: 1.2;
    font-size: 80%;
  }

  code {
    font-family: 'Dank Mono', monospace;
  }

  blockquote {
    width: 80%;
    text-align: left;
    box-shadow: none;
    line-height: 1.55;
    font-size: 130%;
    position: relative;

    p::before,
    p::after {
      position: absolute;
      font-size: 2.5em;
      font-family: Georgia, serif;
      color: $headingColor;
    }

    p::before {
      top: -0.125em;
      left: -0.5em;
      content: '\201C';
    }

    p::after {
      bottom: 0;
      right: -0.3em;
      content: '\201D';
    }
  }

  figure {
    img {
      max-height: 75vh;
    }

    figcaption {
      font-style: italic;
      font-size: 75%;
    }
  }

  img[src*="svg"] {
    max-height: 75vh;
  }

  tbody tr:nth-child(odd) {
    background-color: mistyrose;
  }

  table td {
    vertical-align: middle;
    border-bottom: 0;
  }

  ruby {
    ruby-align: center;
    ruby-position: under;
  }
}

// Accessible emojis ------------------------------
span.emoji {
  font-family: 'Apple Color Emoji', 'Segoe UI Emoji';
  font-style: normal;
  font-size: 125%;
  display: inline-block;
  vertical-align: middle;
}

span[role=img][aria-label],
span[role=img][aria-label] {
  position: relative;
}

span[role=img][aria-label]:focus::after,
span[role=img][aria-label]:hover::after {
  font-size: 25%;
  font-family: $mainFont;
  font-weight: 400;
  position: absolute;
  display: block;
  line-height: 1.2;
  content: attr(aria-label);
  z-index: 1;
  background: $mainColor;
  color: $backgroundColor;
  padding: 0.25em;
  border: 1px solid $backgroundColor;
  box-shadow: 2px 2px 4px $mainColor;
}

// Demo-related ------------------------------
.livecode {
  display: grid;
  grid-gap: 0.5em;
  margin: 0;
  padding: 0;

  .result {
    max-height: 100%;
    overflow-y: scroll;
    width: 100%;
    border: 1px dashed $headingColor;

    p {
      margin: 0;
      padding: 0;
    }
  }

  .code {
    text-align: left;
    width: 100%;
    font-family: 'Dank Mono', monospace;
    color: #efdcbc;
    background-color: #3f3f3f;
    padding: 0.5em;
    border-radius: 0.25em;
    overflow-y: scroll;
    font-size: 75%;
  }
}

.code-editor {
  display: block;
  height: 100%;
  white-space: pre-wrap;
}

.vidcode {
  display: grid;
  grid-template-columns: 50% 50%;
  height: 75vh;

  video {
    align-self: center;
  }
}

.livecode-2p {
  grid-template-columns: 65% calc(35% - 0.5em);
  height: 70vh;
}

.code-editor {
  display: block;
  height: 100%;
  white-space: pre-wrap;
}

@keyframes horizontal {
  from, to  {
    transform: translateX(50%);
    animation-timing-function: ease;
  }
  50% {
    transform: translateX(200%);
    animation-timing-function: ease;
  }
}

@keyframes vertical {
  from, to  {
    transform: translate(calc(25vw - 2em), 0%);
    animation-timing-function: ease;
  }
  50% {
    transform: translate(calc(25vw - 2em), 150%);
    animation-timing-function: ease;
  }
}